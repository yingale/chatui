{"ast":null,"code":"// api.js\nasync function fetchJSONData(url) {\n  const response = await fetch(url);\n  if (!response.ok) {\n    throw new Error('Network response was not ok');\n  }\n  return response.json();\n}\nexport async function fetchUserData() {\n  return fetchJSONData('http://localhost:3005/user');\n}\nexport async function fetchGroupData() {\n  return fetchJSONData('http://localhost:3005/groups');\n}\nexport async function postUserData(userData) {\n  const url = 'http://localhost:3005/user';\n  const response = await fetch(url, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json' // Set the content type to JSON\n    },\n\n    body: JSON.stringify(userData) // Convert the user data to JSON string\n  });\n\n  if (!response.ok) {\n    throw new Error('Network response was not ok');\n  }\n  return response.json();\n}\nexport async function login(userData) {\n  const url = 'http://localhost:3005/auth/login';\n  const response = await fetch(url, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json' // Set the content type to JSON\n    },\n\n    body: JSON.stringify(userData) // Convert the user data to JSON string\n  });\n\n  if (!response.ok) {\n    throw new Error('Network response was not ok');\n  }\n  return response.json();\n}\nexport async function postMessageData(userData) {\n  const url = 'http://localhost:3005/messages/create';\n  const response = await fetch(url, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json' // Set the content type to JSON\n    },\n\n    body: JSON.stringify(userData) // Convert the user data to JSON string\n  });\n\n  if (!response.ok) {\n    throw new Error('Network response was not ok');\n  }\n  return response.json();\n}\nexport async function fetchMessage(senderId, receiverId) {\n  return fetchJSONData(`http://localhost:3005/messages/chatByUser/${senderId}/${receiverId}`);\n}\nexport async function fetchMessageGroup(groupId) {\n  return fetchJSONData(`http://localhost:3005/messages/chatByGroup/${groupId}`);\n}","map":{"version":3,"names":["fetchJSONData","url","response","fetch","ok","Error","json","fetchUserData","fetchGroupData","postUserData","userData","method","headers","body","JSON","stringify","login","postMessageData","fetchMessage","senderId","receiverId","fetchMessageGroup","groupId"],"sources":["/Users/yogeshingale/Sites/personal/dripShopUI/client/src/Integration.js"],"sourcesContent":["// api.js\nasync function fetchJSONData(url) {\n    const response = await fetch(url);\n  \n    if (!response.ok) {\n      throw new Error('Network response was not ok');\n    }\n  \n    return response.json();\n  }\n  \n  export async function fetchUserData() {\n    return fetchJSONData('http://localhost:3005/user');\n  }\n  \n  export async function fetchGroupData() {\n    return fetchJSONData('http://localhost:3005/groups');\n  }\n  \n  export async function postUserData(userData) {\n    const url = 'http://localhost:3005/user';\n  \n    const response = await fetch(url, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json', // Set the content type to JSON\n      },\n      body: JSON.stringify(userData), // Convert the user data to JSON string\n    });\n  \n    if (!response.ok) {\n      throw new Error('Network response was not ok');\n    }\n  \n    return response.json();\n  }\n\n  export async function login(userData) {\n    const url = 'http://localhost:3005/auth/login';\n  \n    const response = await fetch(url, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json', // Set the content type to JSON\n      },\n      body: JSON.stringify(userData), // Convert the user data to JSON string\n    });\n  \n    if (!response.ok) {\n      throw new Error('Network response was not ok');\n    }\n  \n    return response.json();\n  }\n  \n  export async function postMessageData(userData) {\n    const url = 'http://localhost:3005/messages/create';\n  \n    const response = await fetch(url, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json', // Set the content type to JSON\n      },\n      body: JSON.stringify(userData), // Convert the user data to JSON string\n    });\n  \n    if (!response.ok) {\n      throw new Error('Network response was not ok');\n    }\n  \n    return response.json();\n  }\n\n  export async function fetchMessage(senderId,receiverId) {\n    return fetchJSONData(`http://localhost:3005/messages/chatByUser/${senderId}/${receiverId}`);\n  }\n  export async function fetchMessageGroup(groupId) {\n    return fetchJSONData(`http://localhost:3005/messages/chatByGroup/${groupId}`);\n  }"],"mappings":"AAAA;AACA,eAAeA,aAAaA,CAACC,GAAG,EAAE;EAC9B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACF,GAAG,CAAC;EAEjC,IAAI,CAACC,QAAQ,CAACE,EAAE,EAAE;IAChB,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;EAChD;EAEA,OAAOH,QAAQ,CAACI,IAAI,CAAC,CAAC;AACxB;AAEA,OAAO,eAAeC,aAAaA,CAAA,EAAG;EACpC,OAAOP,aAAa,CAAC,4BAA4B,CAAC;AACpD;AAEA,OAAO,eAAeQ,cAAcA,CAAA,EAAG;EACrC,OAAOR,aAAa,CAAC,8BAA8B,CAAC;AACtD;AAEA,OAAO,eAAeS,YAAYA,CAACC,QAAQ,EAAE;EAC3C,MAAMT,GAAG,GAAG,4BAA4B;EAExC,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACF,GAAG,EAAE;IAChCU,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACP,cAAc,EAAE,kBAAkB,CAAE;IACtC,CAAC;;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACL,QAAQ,CAAC,CAAE;EAClC,CAAC,CAAC;;EAEF,IAAI,CAACR,QAAQ,CAACE,EAAE,EAAE;IAChB,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;EAChD;EAEA,OAAOH,QAAQ,CAACI,IAAI,CAAC,CAAC;AACxB;AAEA,OAAO,eAAeU,KAAKA,CAACN,QAAQ,EAAE;EACpC,MAAMT,GAAG,GAAG,kCAAkC;EAE9C,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACF,GAAG,EAAE;IAChCU,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACP,cAAc,EAAE,kBAAkB,CAAE;IACtC,CAAC;;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACL,QAAQ,CAAC,CAAE;EAClC,CAAC,CAAC;;EAEF,IAAI,CAACR,QAAQ,CAACE,EAAE,EAAE;IAChB,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;EAChD;EAEA,OAAOH,QAAQ,CAACI,IAAI,CAAC,CAAC;AACxB;AAEA,OAAO,eAAeW,eAAeA,CAACP,QAAQ,EAAE;EAC9C,MAAMT,GAAG,GAAG,uCAAuC;EAEnD,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACF,GAAG,EAAE;IAChCU,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACP,cAAc,EAAE,kBAAkB,CAAE;IACtC,CAAC;;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACL,QAAQ,CAAC,CAAE;EAClC,CAAC,CAAC;;EAEF,IAAI,CAACR,QAAQ,CAACE,EAAE,EAAE;IAChB,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;EAChD;EAEA,OAAOH,QAAQ,CAACI,IAAI,CAAC,CAAC;AACxB;AAEA,OAAO,eAAeY,YAAYA,CAACC,QAAQ,EAACC,UAAU,EAAE;EACtD,OAAOpB,aAAa,CAAE,6CAA4CmB,QAAS,IAAGC,UAAW,EAAC,CAAC;AAC7F;AACA,OAAO,eAAeC,iBAAiBA,CAACC,OAAO,EAAE;EAC/C,OAAOtB,aAAa,CAAE,8CAA6CsB,OAAQ,EAAC,CAAC;AAC/E"},"metadata":{},"sourceType":"module","externalDependencies":[]}